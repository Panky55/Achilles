#ifndef EXPLOIT_H
#define EXPLOIT_H

#include <IOKit/IOKitLib.h>
#include <CoreFoundation/CoreFoundation.h>
#include <time.h>
#include <utils/log.h>
#include <exploit/dfu.h>
#include <exploit/recovery.h>
#include <usb/usb.h>
#include <usb/device.h>
#include <boot/pongo/pongo.h>
#include <boot/pongo/pongo_helper.h>

enum ExploitStage {
    STAGE_RESET = 0,
    STAGE_HEAP_SPRAY = 1,
    STAGE_TRIGGER = 2,
    STAGE_PATCH = 3,
    STAGE_DONE = 4,
    STAGE_PONGO = 5
};

typedef struct {
	uint32_t endpoint, pad_0;
	uint64_t io_buffer;
	uint32_t status, io_len, ret_cnt, pad_1;
	uint64_t callback, next;
} dfu_callback_t;

typedef struct {
	dfu_callback_t callback;
    uint64_t heap_pad_0, heap_pad_1;
} checkm8_overwrite_t;

// ******************************************************
// Function: checkm8()
//
// Purpose: Perform the checkm8 exploit
//
// Returns:
//      int: 0 if the exploit was successful, -1 if there is an error
// ******************************************************
int checkm8();

#endif // EXPLOIT_H