#ifndef DFU_H
#define DFU_H

#include <AlfieLoader.h>
#include <IOKit/IOKitLib.h>
#include <CoreFoundation/CoreFoundation.h>
#include <usb/usb.h>
#include <usb/device.h>

#define DFU_DETACH 0x0
#define DFU_DNLOAD 0x1
#define DFU_UPLOAD 0x2
#define DFU_GETSTATUS 0x3
#define DFU_CLRSTATUS 0x4
#define DFU_GETSTATE 0x5
#define DFU_ABORT 0x6

#define DFU_FILE_SUFFIX_LENGTH 16
#define EP0_MAX_PACKET_SIZE 0x40
#define DFU_MAX_TRANSFER_SIZE 0x800
#define DFU_STATUS_OK 0
#define DFU_STATE_MANIFEST_SYNC 6
#define DFU_STATE_MANIFEST 7
#define DFU_STATE_MANIFEST_WAIT_RESET 8

struct dfu_serial_t
{ // CPID:8011 CPRV:10 CPFM:03 SCEP:01 BDID:04 ECID:000C24A8000B883A IBFL:3C SRTG:[iBoot-3135.0.0.2.3]
    int cpid;
    int cprv;
    int cpfm;
    int bdid;
    unsigned long long ecid;
    int ibfl;
    char srtg[0x20];
    char pwnd[];
};
typedef struct dfu_serial_t dfu_serial_t;

struct dfu_device_t
{
    io_service_t service;
    dfu_serial_t serial;
};
typedef struct dfu_device_t dfu_device_t;

bool isSerialNumberPwned(char *serialNumber);
bool isInDownloadMode(char *serialNumber);
bool DFUSetStateWaitReset(const usb_handle_t *handle);

#endif // DFU_H